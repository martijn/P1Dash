<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 @(GraphWidth + 100) @GraphHeight">
    <g>
        <text x="40" y="@ZeroY" stroke="gray" text-anchor="end">0</text>
        <text x="40" y="15" stroke="gray" text-anchor="end">@MaxValue</text>
        <text x="40" y="@GraphHeight" stroke="green" text-anchor="end">@MinValue</text>
        <line x1="50" x2="50" y1="0" y2="200" stroke="gray"/>
        <line x1="50" x2="@(GraphWidth + 50)" y1="@ZeroY" y2="@ZeroY" stroke="gray"/>
    </g>
    <g>
        <polyline stroke="blue" fill="none" points="@PointList"/>
    </g>
</svg>

@code {

    [Parameter]
    public List<double> Values { get; set; }

    private double MaxValue => Values.Max() > 1 ? Math.Ceiling(Values.Max()) : 1.0;
    private double MinValue => Values.Min() < -1 ? Math.Floor(Values.Min()) : -1;

        private const double GraphHeight = 200.0;
        private const double GraphWidth = 350.0;

    private double GraphRange => Math.Abs(MaxValue) + Math.Abs(MinValue);
    private double ZeroY => Math.Abs(MaxValue) / GraphRange * GraphHeight;
    private double Xoffset => GraphWidth / (Values.Count - 1);
    private double Yoffset => GraphHeight / GraphRange;

    private string PointList =>
        string.Join(" ",
            Values.Select(
                (y, index) => $"{50 + index * Xoffset},{ZeroY - y * Yoffset}"
                )
            );

}